<?php
/**
	Auto generated by xproto.exe
@author
	Dany
*/
require_once("XByteArray.php");
/*::PARENT_CLASS_NAME_INCLUDE::*/

	class /*::BEAN_CLASS_NAME::*/
	{
		/*{::PACKET_COMMAND_DEFINES::}*/
	    /*{::CLASS_MEMBER_DEFINES::}*/
	    
	    public function /*::BEAN_CLASS_NAME::*/()
		{
	/**::SMART_POINTER_CONSTRUCT::**/
		}
			
		public static function _Size(/*{::REF_PARAMETERS::}*/)
		{
			$__xv	= 0;
			$i		=0;
/*{::SIZE_CALC_CODES::}*/
			return $__xv;
		}
				
		public static function _ToBuffer($__dst/*XByteArray*/,/*{::REF_PARAMETERS::}*/)
		{
			$__xv	= 0;
			$i		=0;
/*{::TO_BUFFER_CODES::}*/
			return $__xv;
		}
		
		public static function _ClassFromParameters(/*{::REF_PARAMETERS::}*/)
		{
			$_class = new /*::BEAN_CLASS_NAME::*/();
/*{::CLASS_FROM_PARAMETERS_CODES::}*/			
			return $_class;
		}


		public function FromBuffer($__src/*:XByteArray*/)
		{
			$__xv					= 0;
			$i						=0;
			$__xvBeanSize	=0;
/*{::FROM_BUFFER_CODES::}*/
			return $__xv;
		}
		
		public function ToBuffer($__dst/*XByteArray*/)
		{
			return /*::BEAN_CLASS_NAME::*/::_ToBuffer($__dst,/*{::PASS_PARAMETERS::}*/);
		}
		
		public function Size()
		{
			return /*::BEAN_CLASS_NAME::*/::_Size(/*{::PASS_PARAMETERS::}*/);
		}

    public /*::OVER_RIDE::*/ function FromXml(/*XP_XMLNODE_PTR*/ $pNode)
    {
/*{::FROM_XML_CODES::}*/
		  	return 0;
    }
    
    public /*::OVER_RIDE::*/ function   ToXml(/*XSTRING_STREAM & out*/)
    {
        $__xv_out="";
/*{::TO_XML_CODES::}*/
        return $__xv_out;
    }
    
    public /*::OVER_RIDE::*/  function fromAMFObject($pNode)
    {
       
        /*{::FROM_AMFOBJECT_CODES::}*/
        return 0;
    }
		
	private static function ParamDebugString($param)
    {
    	if (is_object($param))
    	{
    		return $param->ToDebugString();
    	}
    	else if (is_array($param))
    	{
    		$str = "(";
    		foreach($param as $p)
    		{
    			if( is_object($p) )
    			{
    				$str .= $p->ToDebugString().",";
			}
			else
			{
				$str .= strval($p).",";
			}
    		}
    		$str .= ")";
    		$str = str_replace(",,)",")",$str);
    		return $str;
    	}
    	
    	return strval($param);
    } 
    
	public /*::OVER_RIDE::*/ function ToDebugString()
    {
    	$__xv_out  = "(";
    	
/*{::TO_DEBUG_STRING_CODES::}*/
    	
    	$__xv_out  .= ")";
    	
    	$__xv_out = str_replace(",,)",")",$__xv_out);
    	
    	return $__xv_out;
    }
    
   	public static function toAMFObject($__dst/*XByteArray*/,/*{::REF_PARAMETERS::}*/)
		{
			$__xv	= 0;
			$i		=0;
      $obj = array();
/*{::TO_AMFOBJECT_CODES::}*/
      if(count($obj)>0)
      {
          $outBuffer  = WriteAMF3Object($obj);
          $__xv = strlen($outBuffer);
          $__xv+=8;
          $__dst->writeInt32($__xv);
          $__dst->writeInt32(/*::BEAN_CLASS_NAME::*/::$_m_xcmd);
          $__dst->writeBinary($outBuffer,strlen($outBuffer));
      }
      else
      {
          $__xv =8;
          $__dst->writeInt32($__xv);
          $__dst->writeInt32(/*::BEAN_CLASS_NAME::*/::$_m_xcmd);
      }
      
      
			return $__xv;
		}
	}
	
	
?>
